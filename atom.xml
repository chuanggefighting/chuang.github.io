<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>闯哥要去流浪了</title>
  
  <subtitle>我知道你一定会来，所以我一直在等</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chuanggefighting.github.io/"/>
  <updated>2019-02-11T17:56:54.000Z</updated>
  <id>https://chuanggefighting.github.io/</id>
  
  <author>
    <name>chuanggefighting</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>tools</title>
    <link href="https://chuanggefighting.github.io/2019/02/11/3.tools%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    <id>https://chuanggefighting.github.io/2019/02/11/3.tools开发工具/</id>
    <published>2019-02-10T16:30:46.000Z</published>
    <updated>2019-02-11T17:56:54.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Feb 15 2019 11:25:46 GMT+0800 (中国标准时间) --><html><head></head><body><h1 id="一、电脑"><a href="#一、电脑" class="headerlink" title="一、电脑"></a>一、电脑</h1><h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><ol><li><strong>Windows</strong><ul><li>人妻，什么都有，还常附带不想要的东西。</li><li>微软的系统，基于Basic开发，是最普及的桌面系统，主要特点是功能强大但安全堪忧，适用于正常办公以及游戏。</li></ul></li></ol><ol start="2"><li><strong>Mac OS/OSX</strong><ul><li>女友，带着有面子但必须按照它的规则。</li><li>苹果系统，基于linux开发，主要特点是应用软件较少和较安全，适用于办公的高端移动化处理。</li></ul></li></ol><ol start="3"><li><strong>Linux</strong><ul><li>小萝莉，你让它干嘛就干嘛。</li><li>一种自由和开放源码的类Unix操作系统，可安装在手机电脑等各种计算机硬件设备中，主要特点是网络功能强大且对内存等硬件的消耗小，多用于网络服务器中，优点是其易用性和丰富的应用软件。</li></ul></li></ol><h2 id="用户操作接口"><a href="#用户操作接口" class="headerlink" title="用户操作接口"></a>用户操作接口</h2><ol><li><strong>终端 terminal</strong><ul><li>用于人与计算机进行交互的输入输出接口</li><li>本质是通过电缆、网络等连接主机的外部附加设备，一台计算机可以连接个终端</li></ul></li></ol><ol start="2"><li><strong>控制台 console</strong><ul><li>用于管理主机的特殊终端，只允许管理员使用</li><li>本质是直接和计算机相连接的原生设备，一台计算机一般只能有一个控制台</li></ul></li></ol><ol start="3"><li><strong>命令行 shell</strong><ul><li>提供用户界面的程序，用于与计算机内核交互</li><li>本质是 接受用户指令后，调用其他程序与内核交互完成指令</li><li>常用命令 ：<code>cd url/..</code> 进入目录，<code>cls/clear</code> 清空命令内容，<code>ctrl + c</code> 结束当前命令</li><li>shell一般分为两种 ：命令行shell 和 图形shell，前者提供命令行界面 CLI，后者提供图形用户界面 GUI</li></ul></li></ol><ol start="4"><li>终端与 shell 的分工<ul><li>终端从用户接受 鼠标键盘等设备的输入信息，然后发送给 shell</li><li>shell 从终端获取用户指令，解析后发给计算机内核执行，并返回结果给终端</li></ul></li></ol><blockquote><div style="text-indent:2em">批处理文件 ：将一系列命令按照一定顺序集合为一个可执行的文本文件，在 window 系统的扩展名为 bat/cmd，双击文件即可运行，按下 Ctrl + C 可强行终止一个批处理的执行过程。</div></blockquote><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><!-- rebuild by neat --></body></html>]]></content>
    
    <summary type="html">
    
      前端开发工具汇总
    
    </summary>
    
      <category term="Tool" scheme="https://chuanggefighting.github.io/categories/Tool/"/>
    
    
      <category term="Hexo" scheme="https://chuanggefighting.github.io/tags/Hexo/"/>
    
      <category term="MarkDown" scheme="https://chuanggefighting.github.io/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Github搭建个人博客</title>
    <link href="https://chuanggefighting.github.io/2019/02/09/2.hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>https://chuanggefighting.github.io/2019/02/09/2.hexo博客搭建/</id>
    <published>2019-02-08T18:31:41.000Z</published>
    <updated>2019-02-11T17:40:26.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Feb 15 2019 11:25:46 GMT+0800 (中国标准时间) --><html><head></head><body><h1 id="一、博客搭建"><a href="#一、博客搭建" class="headerlink" title="一、博客搭建"></a>一、博客搭建</h1><h2 id="安装-Node-js-和-Git"><a href="#安装-Node-js-和-Git" class="headerlink" title="安装 Node.js 和 Git"></a>安装 Node.js 和 Git</h2><blockquote><div style="text-indent:2em">Git安装后可以创建 ssh key 并添加到 GitHub上, 这样配置之后就不再需要每次更新博客时都输入用户名和密码了。</div></blockquote><h2 id="安装hexo博客框架"><a href="#安装hexo博客框架" class="headerlink" title="安装hexo博客框架"></a>安装hexo博客框架</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli    // window安装</span><br><span class="line">sudo cnpm install -g hexo   // mac安装</span><br><span class="line"></span><br><span class="line">cd blog            //在新建的blog文件夹打开终端</span><br><span class="line"></span><br><span class="line">hexo init          // 初始化</span><br><span class="line"></span><br><span class="line">hexo install       // window安装依赖</span><br><span class="line">sudo npm install   // mac安装依赖</span><br></pre></td></tr></tbody></table></figure><h2 id="测试本地运行（线下访问）"><a href="#测试本地运行（线下访问）" class="headerlink" title="测试本地运行（线下访问）"></a>测试本地运行（线下访问）</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g     // 生成静态文件, 即 hexo generate</span><br><span class="line"></span><br><span class="line">hexo s     // 启动本地服务器, 即 hexo server</span><br></pre></td></tr></tbody></table></figure><h2 id="部署到GitHub上（线上访问）"><a href="#部署到GitHub上（线上访问）" class="headerlink" title="部署到GitHub上（线上访问）"></a>部署到GitHub上（线上访问）</h2><blockquote><div style="text-indent:2em">由于Github是 外国网站且禁止百度爬虫访问，所以会导致百度搜不到你的网站。所以可以做两手准备：国内采用Coding托管，国外采用GitHub托管。</div></blockquote><ol><li><strong>在github上建立一个仓库</strong> (Start a Project)<div style="text-indent:2em">Repository name的格式是 username.github.io, username 必须是本人用户名, 这是GitHub Pages的特殊命名规范(亲测不区分大小写)。</div></li></ol><ol start="2"><li><p><strong>修改部署配置</strong> (blog/_config.yml)</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">    repository:</span> <span class="attr">https://github.com/chuanggefighting/chuanggefighting.github.io.git</span></span><br><span class="line"><span class="attr">    branch:</span> <span class="string">master</span></span><br></pre></td></tr></tbody></table></figure></li></ol><ol start="3"><li><p><strong>上传到服务器</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save  // 安装git部署插件</span><br><span class="line"></span><br><span class="line">hexo clean              // 清除缓存</span><br><span class="line">hexo n post             // 新建文章，即 hexo new post </span><br><span class="line">hexo g                  // 编译博文生成静态文件, 即 hexo generate</span><br><span class="line">hexo d                  // 部署到github, 即 hexo deploy</span><br><span class="line">hexo hexo g -d          // 简化命令, 部署前生成静态文件</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="创建新页面"><a href="#创建新页面" class="headerlink" title="创建新页面"></a>创建新页面</h2><ol><li><p><strong>增加标签页</strong></p><ol><li>首先取消 next/config.yml 文件中 tags 前面的 #</li><li>hexo new page ‘tags’，在blog/sources会增加tags文件夹</li><li>修改index.md内容 type: tags，然后重新上传<br><br></li></ol></li><li><p><strong>增加分类页</strong></p><ol><li>取消 categories 前面的 #</li><li>hexo new page “categories”</li><li>type: “categories”<br><br></li></ol></li><li><p><strong>增加归档页</strong></p><ol><li>取消 categories 前面的 #</li><li>hexo new page “archive”</li><li>type: “archive”</li></ol></li></ol><hr><h1 id="二、博客管理"><a href="#二、博客管理" class="headerlink" title="二、博客管理"></a>二、博客管理</h1><blockquote><div style="text-indent:2em">hexo d 是把本地博客源文件生成的静态网页文件同步到github上而实现部署, 但是博客网站的本地源文件仍需要保存到个人电脑，为了方便在不同电脑上可以编辑管理，可以选择 在github上另建分支 或者 在码云上创建私有仓库。</div><br><div style="text-indent:2em">NexT主题由于频繁更新，为了避免升级报错可以另存为一份配置，然后操作这个配置文件即可。首先在 blog/source 目录下新建_data文件夹，然后去复制 blog/themes/next/_config.yml 到本地并改名为 next.yml，最后将 next.yml 放置在 _data 中即可，以后编辑next.yml即可配置主题。</div></blockquote><p><br></p><hr><h1 id="三、博客个性化配置"><a href="#三、博客个性化配置" class="headerlink" title="三、博客个性化配置"></a>三、博客个性化配置</h1><ol><li><strong>Hexo配置</strong> (blog/_config.yml)<ul><li>Site 站点配置(网站标题、作者、语言等)</li><li>URL 网址配置(网址、根目录、链接格式等)</li><li>Extensions 扩展配置(主题、插件等)</li><li>其他配置选项一般不需要修改</li></ul></li></ol><ol start="2"><li><strong>主题配置</strong> (具体在博客优化部分)<ul><li>安装主题 ：通过 git clone 下载到 blog/themes</li><li>启动主题 ：修改 blog/_config.yml 的theme选项</li><li>配置主题 ：修改 blog/themes/主题名/_config.yml</li></ul></li></ol><ol start="3"><li><strong>自定义域名配置</strong><ul><li>购买域名</li><li>域名解析</li><li>添加CNAME</li></ul></li></ol><hr><h1 id="四、NexT主题优化"><a href="#四、NexT主题优化" class="headerlink" title="四、NexT主题优化"></a>四、NexT主题优化</h1><ol><li><p><strong>实用性优化</strong></p><ul><li>添加RSS ：hexo-generator-feed</li><li>添加标签、分类等页面</li><li>设置网站icon</li><li>添加侧边栏链接</li><li>增加版权信息</li><li>微信支付宝打赏功能</li><li>底部显示建站时间和图标的修改</li><li>外部链接优化 ：hexo-autonofollow</li><li>关闭网站动画 ：use_motion</li><li>设置第三方JS库 ：vendors</li><li>添加评论系统 ：leancloud</li><li>统计站点访客和阅读量 ：busuanzi</li><li>统计文章字数和阅读时间 ：symblos_count_time</li><li>添加文章分享功能 ：needmoreshare2</li><li>添加博文压缩功能 ：hexo-neat / gulp</li><li>添加图片的懒加载 ：hexo-lazyload</li><li>添加文章加密功能 ：hexo-blog-encrypt</li><li>添加文章置顶功能 ：hexo-generator-index-pin-top</li><li>添加站内搜索功能 ：hexo-generator-search、hexo-generator-searchdb</li><li>添加站点地图配置 ：hexo-generator-sitemap、hexo-generator-baidu-sitemap</li><li>DaoVoice在线联系</li></ul></li><li><p><strong>博客个性化优化</strong></p><ul><li>右上角的Github样式</li><li>添加背景动画 ：canvas_nest</li><li>添加页面加载动画 ：pace</li><li>添加顶部阅读进度 ：reading_progress</li><li>点击出现桃心效果 ：clicklove.js</li><li>添加代码块复制按钮 ：clickboard.js</li><li>文章末尾统一添加“文本结束”标记</li><li>修改文章底部标签样式</li><li>修改作者头像并旋转</li><li>文章添加阴影效果</li><li>添加宠物 ：hexo-helper-live2d</li></ul></li></ol><!-- rebuild by neat --></body></html>]]></content>
    
    <summary type="html">
    
      Hexo是一个快速, 简单而强大的博客框架，使用Markdown编写文章。
    
    </summary>
    
      <category term="学习笔记" scheme="https://chuanggefighting.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Hexo" scheme="https://chuanggefighting.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>基于 Markdown 编写博文</title>
    <link href="https://chuanggefighting.github.io/2019/02/01/1.markdown%E5%86%99%E6%96%87%E7%AB%A0/"/>
    <id>https://chuanggefighting.github.io/2019/02/01/1.markdown写文章/</id>
    <published>2019-02-01T14:45:29.000Z</published>
    <updated>2019-02-11T18:47:18.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Feb 15 2019 11:25:46 GMT+0800 (中国标准时间) --><html><head></head><body><h1 id="一、创建文章"><a href="#一、创建文章" class="headerlink" title="一、创建文章"></a>一、创建文章</h1><ul><li>站点目录下执行命令 hexo new “title”</li><li>指定目录下直接创建 source/_post/title.md</li></ul><hr><h1 id="二、初始化设置"><a href="#二、初始化设置" class="headerlink" title="二、初始化设置"></a>二、初始化设置</h1><div style="text-indent:2em">使用命令创建文章时，Hexo 会根据文章的模板文件 /scaffolds/post.md 对新建文件进行初始化，可以根据需要自行修改。初始化后的文章头部除了可以设置文章标题、发布日期等基础信息外，还可以对文章添加标签、分类等，常用设置如下：</div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: my blog</span><br><span class="line">date: 2019-02-04 20:45:30</span><br><span class="line">tags: [Hexo, MarkDown] </span><br><span class="line">categories: 学习笔记</span><br><span class="line">keywords:</span><br><span class="line">    - Hexo</span><br><span class="line">    - 加密</span><br><span class="line"></span><br><span class="line"># 预览文章摘要</span><br><span class="line">description: Markdown语法的格式和注意点  </span><br><span class="line"></span><br><span class="line"># 预览加密文章摘要</span><br><span class="line">password:        #文章密码</span><br><span class="line">abstract: enter password to read      #文章摘要</span><br><span class="line">message: My Birthday      #密码提示</span><br><span class="line"></span><br><span class="line"># 预览文章内容</span><br><span class="line"># 在要显示的内容末尾添加more分隔符 <!-- more --></span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><h1 id="三、编写文章（基于Markdown）"><a href="#三、编写文章（基于Markdown）" class="headerlink" title="三、编写文章（基于Markdown）"></a>三、编写文章（基于Markdown）</h1><h2 id="Markdown-简介"><a href="#Markdown-简介" class="headerlink" title="Markdown 简介"></a>Markdown 简介</h2><blockquote><div style="text-indent:2em">Markdown是一种可以使用普通文本编辑器编写的轻量级「标记语言」，通过简单的标记语法可以使普通文本内容具有一定的格式，是一种适用于网络的书写语言，主要特点是易读易写、支持嵌入html标签和自动生成目录等。但是Hexo下使用的 <code>Github风格的MarkDown（GFM）</code>和 <code>标准MarkDown（MD）</code>在语法上稍有不同，以下主要介绍GFM语法。</div></blockquote><h2 id="MD-与-GFM-的区别"><a href="#MD-与-GFM-的区别" class="headerlink" title="MD 与 GFM 的区别"></a>MD 与 GFM 的区别</h2><ul><li>斜体 ：MD 使用 _ 或 *，GFM 只支持 *</li><li>自动链接 ：MD 使用<url>，GFM 可直接使用 URL</url></li><li>代码块 ：MD 使用 4个空格开头，GFM 还可以使用 ``` 格式</li><li>其他 ：GFM 可以指定语言高亮，而且增加了 删除线、表格、锚点等</li></ul><h2 id="常用语法"><a href="#常用语法" class="headerlink" title="常用语法"></a>常用语法</h2><ul><li>标题 ：根据 # 的数量显示几级标题（1～6）</li><li>引用 ：根据 > 的数量显示几级引用文本</li><li>转义 ：使用 \ 显示文本中的一些字符</li><li>强调 ：使用 * 或 _ 显示 斜体、粗体、粗斜体（1～3），~~ 显示删除</li><li>链接 ：行内式 [名字](地址 “描述”)，参考式 [名字][网址变量]</li><li>列表 ：无序列表使用 -、+ 或 *，有序列表则使用数字加 .</li><li>代码 ：行内代码使用 `，代码块则使用 4个空格 或 ```</li><li>表格 ：- 和 | 分割行和列，: 控制对其方式</li><li>图片 ：链接方法前面加 !</li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">*斜体文本*  _斜体文本_  **粗体文本**  __粗体文本__  ***粗斜体文本***  ___粗斜体文本___</span><br><span class="line">~~删除一段文本~~</span><br><span class="line"></span><br><span class="line">> 动物</span><br><span class="line">>> 水生动物</span><br><span class="line"></span><br><span class="line">[my blog](https://chuanggefighting.github.io/)   </span><br><span class="line">[Google][1] and [Baidu][2]</span><br><span class="line"></span><br><span class="line">[1]: http://google.com/   "Google" </span><br><span class="line">[2]: http://baidu.com/    "Baidu"</span><br><span class="line"></span><br><span class="line">Python</span><br><span class="line">#!/usr/bin/env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">print 'Hello World!</span><br></pre></td></tr></tbody></table></figure><p><em>斜体文本</em> <em>斜体文本</em> <strong>粗体文本</strong> <strong>粗体文本</strong> <strong><em>粗斜体文本</em></strong> <strong><em>粗斜体文本</em></strong><br><del>删除一段文本</del></p><blockquote><p>动物</p><blockquote><p>水生动物</p></blockquote></blockquote><p><a href="https://chuanggefighting.github.io/">my blog</a><br><a href="http://google.com/" title="Google" rel="external nofollow noopener noreferrer" target="_blank">Google</a> and <a href="http://baidu.com/" title="Baidu" rel="external nofollow noopener noreferrer" target="_blank">Baidu</a></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Hello World!</span></span><br></pre></td></tr></tbody></table></figure><h2 id="次常用语法"><a href="#次常用语法" class="headerlink" title="次常用语法"></a>次常用语法</h2><ul><li>分段：两个空格</li><li>分隔线 ：在一行中使用三个以上的 *、-、_</li><li>换行：两个空格 + 回车 （引用中换行省略回车）</li><li>首行缩进：使用转义字符代替空格，或者使用html标签</li><li>脚注 ：使用 [^name] 定义，用来解释专业词汇等</li></ul><h2 id="内嵌Html标签"><a href="#内嵌Html标签" class="headerlink" title="内嵌Html标签"></a>内嵌Html标签</h2><blockquote><p></p><div style="text-indent:2em">Markdown本身不支持修改字体、字号与颜色等功能，但是可以通过内嵌Html标签使普通文本内容具有一定的格式，常用如下：</div><p></p><ul><li><font face="微软雅黑" color="red" size="3">字体及字体颜色和大小</font></li><li>换行<br></li><li><u>下划线文本</u></li><li><span align="left">文本对齐</span></li><li><span style="text-indent:2em">首行缩进</span></li></ul></blockquote><hr><h1 id="四、图片引用方式"><a href="#四、图片引用方式" class="headerlink" title="四、图片引用方式"></a>四、图片引用方式</h1><div align="center"><br><img src="/images/post/snow.jpg" alt="snow" title="snow scane"><br><br></div><h2 id="本地引用"><a href="#本地引用" class="headerlink" title="本地引用"></a>本地引用</h2><ul><li><strong>绝对路径</strong><div style="text-indent:2em">将图片统一放在主题目录下 source/images 文件夹中，通过markdown语法访问它们，如 <code>![](/images/icon.jpg)</code>。这些图片既可以在首页内容中访问到，也可以在文章正文中访问到。</div></li></ul><ul><li><p><strong>相对路径</strong></p><div style="text-indent:2em">将图片放在文章目录中。首先配置博客根目录下的_config.yml来生成文章目录 ： <code>post_asset_folder: true</code>，然后执行命令 $ hexo new title，在 source/_posts 中会生成文章 title.md 和同名文件夹 title。</div><p></p><div style="text-indent:2em">我们只需将待添加的图片放进title文件夹中，然后在文章中通过 Markdown 语法进行引用即可，如 <code>![示例图片](example.jpg "示例图片") 添加图片</code>。但这些图片却无法在首页中正常显示，如果希望图片在文章和首页中同时显示，可以使用标签插件语法 ：</div><p></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% asset_img example.jpg This is an image %}</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="CDN引用"><a href="#CDN引用" class="headerlink" title="CDN引用"></a>CDN引用</h2><p></p><div style="text-indent:2em">除了在本地存储图片，还可以将图片上传到一些免费的CDN服务中。因国内访问github速度较慢，所以将图片放到国内图床上，然后引用外链是常用的方法。</div><br><p></p><blockquote><p>图床，也就是专门提供存储图片的地方，我们只要通过图床提供的 API 接口，把图片上传上去，就可以通过外链访问了，根本不用操心图片是怎么存的，硬盘空间不够了，硬盘坏了，访问速度比较慢等等问题，这些图床都会帮我们搞定，他们会用各种技术帮我们做图片相关的优化和服务，比如多机互备、CDN 加速、图片处理、图片鉴黄、文本识别等等。</p></blockquote><blockquote><p>当然，图床也是有缺点的，当所有人都把图片存在同一个图床上，万一有一天图床真挂了，那所有图片就都无法访问了，虽然这种情况的概率很低，但并不等于不会发生。</p></blockquote><blockquote><p>目前图床可以分为两种，一种是公共图床，一种是自建图床。公共图床也就是利用公共服务的图片上传接口，来提供图片外链的服务，比如新浪微博。自建图床，也就是利用各大云服务商提供的存储空间或者自己在 VPS 上使用开源软件来搭建图床，存储图片，生成外链提供访问，比如七牛、Lychee 开源自建图床方案。</p></blockquote><ol><li>微博图床（Chrome浏览器有个“新浪微博图床”插件，可以自动生成markdown链接）简单方便</li><li>七牛：需要注册且实名认证等太麻烦，放弃</li><li>腾讯云等云存储服务，需要先将照片放到云盘，然后找到超链接，然后粘贴到文章。太麻烦，放弃。</li><li>ipic 工具【强烈推荐】，支持监控剪贴板，一键上传到微博图床，免费版默认是微博图床，支持七牛云等，下载地址: <a href="https://itunes.apple.com/cn/app/id1101244278?mt=12" rel="external nofollow noopener noreferrer" target="_blank">https://itunes.apple.com/cn/app/id1101244278?mt=12</a></li></ol><h2 id="使用github存储博客图片"><a href="#使用github存储博客图片" class="headerlink" title="使用github存储博客图片"></a>使用github存储博客图片</h2><ol><li>在 blog/source/ 下创建img文件，将图片放入。</li><li>更新博客仓库，执行 hexo g -d</li><li>在github仓库中找到图片位置，点击download，复制浏览器的链接，即为图片的链接</li><li>将链接插入文章</li></ol><!-- rebuild by neat --></body></html>]]></content>
    
    <summary type="html">
    
      Hexo博客使用 Github风格的 MarkDown语法
    
    </summary>
    
      <category term="学习笔记" scheme="https://chuanggefighting.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Hexo" scheme="https://chuanggefighting.github.io/tags/Hexo/"/>
    
      <category term="MarkDown" scheme="https://chuanggefighting.github.io/tags/MarkDown/"/>
    
  </entry>
  
</feed>
